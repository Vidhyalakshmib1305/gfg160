struct Node {
    int data;
    struct Node* next;
    Node(int x) {
        data = x;
        next = NULL;
    }
};

class Solution {
  public:
    Node* reverseList(struct Node* head){
        Node *curr = head, *prev = NULL, *last = curr -> next;
        while(curr){
            last = curr -> next;
            curr -> next = prev;
            prev = curr;
            curr = last;
        }
        
        return prev;
        
    }
    Node* addTwoLists(Node* num1, Node* num2) {
        Node* ans = new Node(0);
        Node* curr = ans;
        Node* t1 = reverseList(num1);
        Node* t2 = reverseList(num2);
        int carry = 0;
        
        while(t1 != NULL || t2 != NULL){
            int sum = carry;
            if(t1) sum += t1 -> data;
            if(t2) sum += t2 -> data;
            
            if(t1) t1 = t1 -> next;
            if(t2) t2 = t2 -> next;
            
            ans -> data = (sum % 10);
            carry = sum / 10;
            
            if(carry || num1 || num2){
                ans -> next = new Node(carry);
                ans = ans -> next;
            }
        }
        
        reverseList(curr);
        while(ans -> data == 0 && ans -> next) ans = ans ->next;
        return ans;

    }
};

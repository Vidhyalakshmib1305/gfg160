#include<bits/stdc++.h>
using namespace std;

class Solution {
  public:
    int firstOccurrence(vector<int>& arr, int n, int k){
        int first = -1;
        int low = 0; 
        int high = n-1;
        while(low <= high){
            int mid = (low + high) / 2;
            
            if(arr[mid] == k){
                first = mid;
                high = mid - 1;
            }
            
            else if(arr[mid] < k) low = mid + 1;
            else high = mid - 1;
        }
        return first;
    }
    
    int lastOccurrence(vector<int>&arr, int n, int k){
        int last = -1;
        int low = 0;
        int high = n-1;
        while(low <= high){
            int mid = (low + high) / 2;
            
            if(arr[mid] == k){
                last = mid;
                low = mid + 1;
            }
            else if(arr[mid] < k) low = mid + 1;
            else high = mid - 1;
        }
        return last;
    }
    
    int countFreq(vector<int>& arr, int target) {
        int n = arr.size();
        int first = firstOccurrence(arr, n, target);
        int last = lastOccurrence(arr, n, target);
        if(first == -1) return 0;
        int count = last - first + 1;
        return count;
    }
};
